plugins {
    id 'com.diffplug.gradle.spotless' version '3.28.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
}

group = 'io.github.notaphplover'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly.extendsFrom annotationProcessor

    intApiTestImplementation.extendsFrom implementation
    intApiTestRuntimeOnly.extendsFrom runtimeOnly

    intDbTestImplementation.extendsFrom implementation
    intDbTestImplementation.extendsFrom runtimeOnly
}

repositories {
    mavenCentral()
}

dependencies {

    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.4.16.Final'

    implementation 'com.diffplug.spotless:spotless-plugin-gradle:3.28.0'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    
    implementation 'org.hibernate:hibernate-validator:6.1.5.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.3.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.0.RELEASE'
    
    runtimeOnly 'org.postgresql:postgresql'
    
    testImplementation('org.mockito:mockito-core:3.3.3')
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation('org.junit.platform:junit-platform-commons:1.6.2')

    intApiTestImplementation('com.jayway.jsonpath:json-path:2.4.0')
    intApiTestImplementation('org.hamcrest:hamcrest-library:2.2')
    intApiTestImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    intApiTestImplementation('org.junit.platform:junit-platform-commons:1.6.2')
    intApiTestImplementation('org.mockito:mockito-core:3.3.3')
    intApiTestImplementation('org.springframework:spring-test:5.2.7.RELEASE')
    intApiTestImplementation('org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE')

    intDbTestImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    intDbTestImplementation('org.junit.platform:junit-platform-commons:1.6.2')
    intDbTestImplementation('org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE')
    intDbTestImplementation('org.testcontainers:postgresql:1.14.3')
}

spotless {
    java {
    target project.fileTree(project.rootDir) {
        include '**/*.java'
        exclude 'src/generated/java'
    }
    googleJavaFormat()
  }
}

sourceSets {

    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }

    intApiTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }

    intDbTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }

}

task integrationApiTest(type: Test) {
    description = 'Runs integration API tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intApiTest.output.classesDirs
    classpath = sourceSets.intApiTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()
}

task integrationDbTest(type: Test) {
    description = 'Runs integration DB tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intDbTest.output.classesDirs
    classpath = sourceSets.intDbTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()
}


tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}

check.dependsOn integrationApiTest
check.dependsOn integrationDbTest

test {
    useJUnitPlatform()
}
